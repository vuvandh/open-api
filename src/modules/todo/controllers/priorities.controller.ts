// ==============================================
// FILE: src/modules/todo/controllers/priorities.controller.ts
// ==============================================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete,
  HttpCode,
  HttpStatus,
} from '@nestjs/common';
import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';
import { PrioritiesService } from '../services/priorities.service';
import { CreatePriorityDto } from '../dto/create-priority.dto';

@ApiTags('ðŸ”º Priorities')
@Controller('api/v1/todo/priorities')
export class PrioritiesController {
  constructor(private readonly prioritiesService: PrioritiesService) {}

  @Post()
  @ApiOperation({ summary: 'Táº¡o má»©c Æ°u tiÃªn má»›i' })
  @ApiResponse({ status: 201, description: 'Má»©c Æ°u tiÃªn Ä‘Ã£ Ä‘Æ°á»£c táº¡o' })
  create(@Body() createPriorityDto: CreatePriorityDto) {
    return this.prioritiesService.create(createPriorityDto);
  }

  @Get()
  @ApiOperation({ summary: 'Láº¥y danh sÃ¡ch táº¥t cáº£ má»©c Æ°u tiÃªn' })
  @ApiResponse({
    status: 200,
    description: 'Danh sÃ¡ch má»©c Æ°u tiÃªn vá»›i sá»‘ lÆ°á»£ng todos',
  })
  findAll() {
    return this.prioritiesService.findAll();
  }

  @Get(':id')
  @ApiOperation({ summary: 'Láº¥y thÃ´ng tin má»©c Æ°u tiÃªn theo ID' })
  @ApiResponse({
    status: 200,
    description: 'ThÃ´ng tin má»©c Æ°u tiÃªn vÃ  todos liÃªn quan',
  })
  @ApiResponse({ status: 404, description: 'Má»©c Æ°u tiÃªn khÃ´ng tá»“n táº¡i' })
  findOne(@Param('id') id: string) {
    return this.prioritiesService.findOne(id);
  }

  @Patch(':id')
  @ApiOperation({ summary: 'Cáº­p nháº­t má»©c Æ°u tiÃªn' })
  @ApiResponse({ status: 200, description: 'Má»©c Æ°u tiÃªn Ä‘Ã£ Ä‘Æ°á»£c cáº­p nháº­t' })
  @ApiResponse({ status: 404, description: 'Má»©c Æ°u tiÃªn khÃ´ng tá»“n táº¡i' })
  update(
    @Param('id') id: string,
    @Body() updatePriorityDto: CreatePriorityDto,
  ) {
    return this.prioritiesService.update(id, updatePriorityDto);
  }

  @Delete(':id')
  @HttpCode(HttpStatus.NO_CONTENT)
  @ApiOperation({ summary: 'XÃ³a má»©c Æ°u tiÃªn' })
  @ApiResponse({ status: 204, description: 'Má»©c Æ°u tiÃªn Ä‘Ã£ Ä‘Æ°á»£c xÃ³a' })
  @ApiResponse({ status: 404, description: 'Má»©c Æ°u tiÃªn khÃ´ng tá»“n táº¡i' })
  async remove(@Param('id') id: string) {
    await this.prioritiesService.remove(id);
  }
}
