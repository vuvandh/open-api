// ==============================================
// FILE: src/modules/todo/controllers/categories.controller.ts
// ==============================================
import {
  Controller,
  Get,
  Post,
  Body,
  Patch,
  Param,
  Delete,
  HttpCode,
  HttpStatus,
} from '@nestjs/common';
import { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';
import { CategoriesService } from '../services/categories.service';
import { CreateCategoryDto } from '../dto/create-category.dto';

@ApiTags('üóÇÔ∏è Categories')
@Controller('api/v1/todo/categories')
export class CategoriesController {
  constructor(private readonly categoriesService: CategoriesService) {}

  @Post()
  @ApiOperation({ summary: 'T·∫°o danh m·ª•c m·ªõi' })
  @ApiResponse({ status: 201, description: 'Danh m·ª•c ƒë√£ ƒë∆∞·ª£c t·∫°o' })
  create(@Body() createCategoryDto: CreateCategoryDto) {
    return this.categoriesService.create(createCategoryDto);
  }

  @Get()
  @ApiOperation({ summary: 'L·∫•y danh s√°ch t·∫•t c·∫£ danh m·ª•c' })
  @ApiResponse({
    status: 200,
    description: 'Danh s√°ch danh m·ª•c v·ªõi s·ªë l∆∞·ª£ng todos',
  })
  findAll() {
    return this.categoriesService.findAll();
  }

  @Get(':id')
  @ApiOperation({ summary: 'L·∫•y th√¥ng tin danh m·ª•c theo ID' })
  @ApiResponse({
    status: 200,
    description: 'Th√¥ng tin danh m·ª•c v√† todos li√™n quan',
  })
  @ApiResponse({ status: 404, description: 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i' })
  findOne(@Param('id') id: string) {
    return this.categoriesService.findOne(id);
  }

  @Patch(':id')
  @ApiOperation({ summary: 'C·∫≠p nh·∫≠t danh m·ª•c' })
  @ApiResponse({ status: 200, description: 'Danh m·ª•c ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t' })
  @ApiResponse({ status: 404, description: 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i' })
  update(
    @Param('id') id: string,
    @Body() updateCategoryDto: CreateCategoryDto,
  ) {
    return this.categoriesService.update(id, updateCategoryDto);
  }

  @Delete(':id')
  @HttpCode(HttpStatus.NO_CONTENT)
  @ApiOperation({ summary: 'X√≥a danh m·ª•c' })
  @ApiResponse({ status: 204, description: 'Danh m·ª•c ƒë√£ ƒë∆∞·ª£c x√≥a' })
  @ApiResponse({ status: 404, description: 'Danh m·ª•c kh√¥ng t·ªìn t·∫°i' })
  async remove(@Param('id') id: string) {
    await this.categoriesService.remove(id);
  }
}
